系统底层运行基本的交易逻辑
Account维护了基本的数据项目
扩展模块扩充了系统的基本功能,但是系统扩充功能的同时必然会引起基本Account的变动
以配资为例
1.客户端查询某个帐户的配资信息
2.管理端针对配资服进行设置或者修改
3.命令行交互手工管理扩展模块的相关操作,比如重置,激活等
4.web模块交互,暴露给web端相关功能的操作
以上操作可以通过映射ContribRequest消息到对应模块的ContribCommand实现解耦
应为对端都可以针对数据进行解析
比如配资模块给客户端,管理端发送了一条消息,对端就可以通过该消息解析出对应的消息内容并获得所需要的结构

但是系统底层比如保证金变化,则需要实时的调用配资模块的相关函数进行计算获得。
这里我们必然会在原来系统的基础上增加相关事件以达到函数回调的目的

通过最近代码重构,我们得出一个原则
将数据处理边缘化,通过客户端或者扩展模块来解析和处理数据系统内核部分尽量不处理具体的业务对象与数据
在必须对数据进行处理时,尽量保持一个简单或者范围很小的一个操作。

模块扩展方法
1.外围消息通讯的扩展通过ContribCommand进行扩展
2.系统内部逻辑的变动通过Account增加属性,以及添加必要的函数回调进行扩展




